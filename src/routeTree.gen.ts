/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/signUp'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as GroupsRouteImport } from './routes/groups'
import { Route as ForumRouteImport } from './routes/forum'
import { Route as ChallengesRouteImport } from './routes/challenges'
import { Route as IndexRouteImport } from './routes/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const GroupsRoute = GroupsRouteImport.update({
  id: '/groups',
  path: '/groups',
  getParentRoute: () => rootRouteImport,
} as any)
const ForumRoute = ForumRouteImport.update({
  id: '/forum',
  path: '/forum',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesRoute = ChallengesRouteImport.update({
  id: '/challenges',
  path: '/challenges',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/challenges': typeof ChallengesRoute
  '/forum': typeof ForumRoute
  '/groups': typeof GroupsRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/challenges': typeof ChallengesRoute
  '/forum': typeof ForumRoute
  '/groups': typeof GroupsRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/challenges': typeof ChallengesRoute
  '/forum': typeof ForumRoute
  '/groups': typeof GroupsRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/challenges' | '/forum' | '/groups' | '/signIn' | '/signUp'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/challenges' | '/forum' | '/groups' | '/signIn' | '/signUp'
  id:
    | '__root__'
    | '/'
    | '/challenges'
    | '/forum'
    | '/groups'
    | '/signIn'
    | '/signUp'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChallengesRoute: typeof ChallengesRoute
  ForumRoute: typeof ForumRoute
  GroupsRoute: typeof GroupsRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/groups': {
      id: '/groups'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof GroupsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forum': {
      id: '/forum'
      path: '/forum'
      fullPath: '/forum'
      preLoaderRoute: typeof ForumRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges': {
      id: '/challenges'
      path: '/challenges'
      fullPath: '/challenges'
      preLoaderRoute: typeof ChallengesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChallengesRoute: ChallengesRoute,
  ForumRoute: ForumRoute,
  GroupsRoute: GroupsRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
